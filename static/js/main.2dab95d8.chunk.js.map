{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactList/ContactItem/ContactItem.module.css","components/ContactList/ContactList.module.css","components/Notification/Notification.module.css","components/Notification/Notification.js","redux/phonebook/phonebook-action.js","api/phonebookApi.js","redux/phonebook/phonebook-operations.js","redux/phonebook/phonebook-reducer.js","redux/phonebook/phonebook-selector.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactItem/ContactItem.js","components/ContactList/ContactList.js","components/App.js","redux/store.js","index.js"],"names":["module","exports","Notification","message","className","styles","onChangeFilter","createAction","axios","defaults","baseURL","addContactsApi","contact","post","then","data","deleteContactsByIdApi","id","delete","addContact","createAsyncThunk","a","rejectWithValue","phoneBookApi","responseContact","deleteContact","fetchContacts","_","get","contacts","contactsReducer","createReducer","fulfilled","state","payload","filter","filterReducer","actions","action","loadingReducer","pending","rejected","errorReducer","combineReducers","loading","error","getContacts","phoneBook","getFilter","getFilteredContacts","createSelector","name","toLowerCase","includes","ContactForm","useState","setName","number","setNumber","useSelector","phonebookSelectors","dispatch","useDispatch","handleChange","event","target","value","formSubmit","onSubmit","evt","preventDefault","some","alert","phonebookOperations","v4","formSubmitInput_name","type","onChange","formSubmitInput_number","formSubmitButton","ContactFilter","filterTitle","filterInput","phonebookActions","autoFocus","ContactItem","contactName","contactDeleteButton","onClick","ContactList","filteredContacts","contactList","map","contactListItem","App","useEffect","length","middleware","getDefaultMiddleware","store","configureStore","reducer","phonebookReducer","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2dab95d8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formSubmit\":\"ContactForm_formSubmit__39UVb\",\"formSubmitInput\":\"ContactForm_formSubmitInput__3VM5p\",\"formSubmitButton\":\"ContactForm_formSubmitButton__2R5h5\",\"formSubmitInput_number\":\"ContactForm_formSubmitInput_number__Tw50i ContactForm_formSubmitInput__3VM5p\",\"formSubmitInput_name\":\"ContactForm_formSubmitInput_name__19H7O ContactForm_formSubmitInput__3VM5p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactName\":\"ContactItem_contactName__34gmI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__3W8nm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Notification_message__1dOoA\"};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Notification.module.css';\r\n\r\nconst Notification = ({ message }) => (\r\n  <p className={styles.message}>{message}</p>\r\n);\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Notification;\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const onChangeFilter = createAction('phonebook/onChangeFilter');","import axios from 'axios';\naxios.defaults.baseURL = 'http://localhost:3003';\n\nexport const getContactsApi = () => {\n  return axios.get('/contacts').then(({ data }) => data);\n};\n\nexport const addContactsApi = contact => {\n  return axios.post('/contacts', contact).then(({ data }) => data);\n};\n\nexport const deleteContactsByIdApi = id => {\n  return axios.delete(`/contacts/${id}`);\n};\n","import { createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\nimport * as phoneBookApi from 'api/phonebookApi';\n\naxios.defaults.baseURL = 'http://localhost:3003';\n\nexport const addContact = createAsyncThunk(\n  'phoneBook/addContact',\n  async (contact, { rejectWithValue }) => {\n    try {\n      const responseContact = await phoneBookApi.addContactsApi(contact);\n      return responseContact;\n    } catch (error) {\n      return rejectWithValue(error);\n    }\n  },\n);\n\nexport const deleteContact = createAsyncThunk(\n  'phoneBook/removeContact',\n  async (id, { rejectWithValue }) => {\n    try {\n      await phoneBookApi.deleteContactsByIdApi(id);\n      return id;\n    } catch (error) {\n      return rejectWithValue(error);\n    }\n  },\n);\n\nexport const fetchContacts = createAsyncThunk(\n  'phoneBook/fetchContacts',\n  async (_, { rejectWithValue }) => {\n    try {\n      const contacts = await phoneBookApi.getContactsApi();\n      return contacts;\n    } catch (error) {\n      return rejectWithValue(error);\n    }\n  },\n);\n","import { createReducer, combineReducers } from '@reduxjs/toolkit';\r\nimport * as actions from './phonebook-action';\r\nimport {\r\n  addContact,\r\n  deleteContact,\r\n  fetchContacts,\r\n} from './phonebook-operations';\r\n\r\nconst contactsReducer = createReducer([], {\r\n  [deleteContact.fulfilled]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n\r\n  [addContact.fulfilled]: (state, { payload }) => [...state, payload],\r\n  [fetchContacts.fulfilled]: (_, { payload }) => payload,\r\n});\r\n\r\nconst filterReducer = createReducer('', {\r\n  [actions.onChangeFilter]: (_, action) => action.payload,\r\n});\r\n\r\nconst loadingReducer = createReducer(false, {\r\n  [addContact.pending]: () => true,\r\n  [addContact.fulfilled]: () => false,\r\n  [addContact.rejected]: () => false,\r\n  [deleteContact.pending]: () => true,\r\n  [deleteContact.fulfilled]: () => false,\r\n  [deleteContact.rejected]: () => false,\r\n  [fetchContacts.pending]: () => true,\r\n  [fetchContacts.fulfilled]: () => false,\r\n  [fetchContacts.rejected]: () => false,\r\n});\r\n\r\nconst errorReducer = createReducer(null, {\r\n  [fetchContacts.rejected]: (_, { payload }) => payload,\r\n  [fetchContacts.pending]: () => null,\r\n  [deleteContact.rejected]: (_, { payload }) => payload,\r\n  [deleteContact.pending]: () => null,\r\n});\r\n\r\nexport default combineReducers({\r\n  contacts: contactsReducer,\r\n  filter: filterReducer,\r\n  loading: loadingReducer,\r\n  error: errorReducer,\r\n});\r\n","// import { createSelector } from '@reduxjs/toolkit';\r\nimport { createSelector } from 'reselect';\r\n\r\nexport const getContacts = state => state.phoneBook.contacts;\r\n\r\nexport const getFilter = state => state.phoneBook.filter;\r\n\r\n\r\n// MEMORIZED\r\nexport const getFilteredContacts = createSelector(\r\n  [getContacts, getFilter],\r\n  (contacts, filter) => {\r\n    return contacts.filter(contact =>\r\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\r\n    );\r\n  },\r\n);\r\n","import React, { useState } from 'react';\r\nimport styles from './ContactForm.module.css';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { phonebookSelectors, phonebookOperations } from 'redux/phonebook';\r\n\r\nimport { v4 } from 'uuid';\r\n\r\nconst ContactForm = () => {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n\r\n  const contacts = useSelector(phonebookSelectors.getContacts);\r\n  const dispatch = useDispatch();\r\n\r\n\r\n  const handleSubmit = evt => {\r\n    evt.preventDefault(); \r\n    const sameName = contacts.some(\r\n    contact => name.toLowerCase() === contact.name.toLowerCase(),\r\n  );\r\n    if (sameName) {\r\n      alert(`${name} already in contacts`);\r\n      return;\r\n    }\r\n    dispatch(phonebookOperations.addContact({ name, number, id: v4() }));\r\n  };\r\n\r\n  const handleChange = event => {\r\n    const { name, value } = event.target;\r\n\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n\r\n      case 'number':\r\n        setNumber(value);\r\n        break;\r\n\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form className={styles.formSubmit} onSubmit={handleSubmit}>\r\n      <label>\r\n        Name\r\n        <input\r\n          className={styles.formSubmitInput_name}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={name}\r\n          onChange={handleChange}\r\n        />\r\n      </label>\r\n      <label>\r\n        Number\r\n        <input\r\n          className={styles.formSubmitInput_number}\r\n          type=\"number\"\r\n          name=\"number\"\r\n          value={number}\r\n          onChange={handleChange}\r\n        />\r\n      </label>\r\n      <button className={styles.formSubmitButton} type=\"submit\">\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ContactForm;\r\n","import React from 'react';\r\nimport styles from './Filter.module.css';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { phonebookSelectors, phonebookActions } from 'redux/phonebook';\r\n\r\nfunction ContactFilter() {\r\n\r\n  const filter = useSelector(phonebookSelectors.getFilter);\r\n  const dispatch = useDispatch();\r\n  \r\n  return (\r\n    <>\r\n      <h3 className={styles.filterTitle}>Find contact by name</h3>\r\n      <input\r\n        className={styles.filterInput}\r\n        type=\"text\"\r\n        value={filter}\r\n        name=\"filter\"\r\n        onChange={event =>\r\n          dispatch(phonebookActions.onChangeFilter(event.target.value))\r\n        }\r\n        autoFocus\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ContactFilter;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './ContactItem.module.css';\r\nimport { useDispatch } from 'react-redux';\r\nimport { phonebookOperations } from 'redux/phonebook/';\r\n\r\nfunction ContactItem({ id, name, number }) {\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <>\r\n      <span className={styles.contactName}>\r\n        {name}: {number}\r\n      </span>\r\n      <button\r\n        className={styles.contactDeleteButton}\r\n        onClick={() => dispatch(phonebookOperations.deleteContact(id))}\r\n      >\r\n        Удалить\r\n      </button>\r\n    </>\r\n  );\r\n}\r\n\r\nContactItem.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default ContactItem;\r\n","import React from 'react';\r\nimport ContactItem from './ContactItem/ContactItem';\r\nimport styles from './ContactList.module.css';\r\nimport { useSelector } from 'react-redux';\r\nimport { getFilteredContacts } from '../../redux/phonebook/phonebook-selector';\r\n\r\nfunction ContactList() {\r\n  const filteredContacts = useSelector(getFilteredContacts);\r\n  return (\r\n    <ul className={styles.contactList}>\r\n      {filteredContacts.map(({ id, name, number }) => (\r\n        <li className={styles.contactListItem} key={id}>\r\n          <ContactItem id={id} name={name} number={number} />\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\nexport default ContactList;\r\n","import React, { useEffect } from 'react';\nimport Notification from './Notification/Notification';\nimport ContactForm from './ContactForm/ContactForm';\nimport ContactFilter from './Filter/Filter';\nimport ContactList from './ContactList/ContactList';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { getContacts } from 'redux/phonebook/phonebook-selector';\nimport { phonebookOperations } from 'redux/phonebook/';\n\nfunction App() {\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContacts);\n  useEffect(() => {\n    dispatch(phonebookOperations.fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      {contacts.length > 0 ? (\n        <div>\n          <ContactFilter />\n          <ContactList />\n        </div>\n      ) : (\n        <Notification message=\"No number in the phone book\" />\n      )}\n    </>\n  );\n}\n\nexport default App;\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport phonebookReducer from './phonebook/phonebook-reducer';\r\nimport {\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\n\r\nimport logger from 'redux-logger';\r\n\r\n\r\n\r\nconst middleware =\r\n  process.env.NODE_ENV === 'development'\r\n    ? [\r\n        ...getDefaultMiddleware({\r\n          serializableCheck: {\r\n            ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n          },\r\n        }),\r\n        logger,\r\n      ]\r\n    : getDefaultMiddleware;\r\n\r\n\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    phoneBook: phonebookReducer,\r\n  },\r\n  devTools: process.env.NODE_ENV === 'development',\r\n  middleware,\r\n});\r\n\r\n\r\nexport default store;","import React from 'react';\nimport { Provider } from 'react-redux';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport store from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}